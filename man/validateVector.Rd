% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validation-vector.R
\name{validateVector}
\alias{validateVector}
\alias{validateVectorRange}
\alias{validateVectorValues}
\title{Validate Vector Against Specified Criteria}
\usage{
validateVector(
  x,
  type = NULL,
  valueRange = NULL,
  allowedValues = NULL,
  nullAllowed = FALSE,
  naAllowed = FALSE
)

validateVectorRange(x, type, valueRange)

validateVectorValues(x, type, allowedValues = NULL, naAllowed = FALSE)
}
\arguments{
\item{x}{Vector to validate.}

\item{type}{Expected type of elements in \code{x} ("numeric", "integer", "character",
"factor", "logical", or "Date"). Type "double" is treated as "numeric".}

\item{valueRange}{Optional vector of length 2 specifying the range of allowed values
for \code{x}, applicable to "numeric", "integer", "character", and "Date" types.}

\item{allowedValues}{Optional vector specifying a set of allowed values for \code{x}.}

\item{nullAllowed}{Logical flag indicating whether \code{x} can be \code{NULL}. Defaults to \code{FALSE}.}

\item{naAllowed}{Logical flag indicating whether elements in \code{x} can be \code{NA}. Defaults to \code{FALSE}.}
}
\value{
Does not return a value explicitly but will stop with a descriptive error message if any of the
validations fail.
}
\description{
Validates a vector \code{x} based on specified criteria, including type correctness, value range,
allowed values, and handling of \code{NULL} and \code{NA} values. If the vector fails any validation,
an informative error message is thrown.
}
\details{
\code{validateVector} is the primary function for checking a vector against defined validation criteria.
It ensures that \code{x} meets the type, range, and allowed value conditions specified. For more detailed
validations related to the value range and allowed values, \code{validateVectorRange} and
\code{validateVectorValues} functions are utilized respectively.
}
\examples{
validateVector(x = 1:5, type = "integer")
validateVector(x = c(1.2, 2.5), type = "numeric", valueRange = c(1, 3))
validateVector(x = c("a", "b"), type = "character", allowedValues = c("a", "b", "c"))
validateVector(x = as.Date("2020-01-01"), type = "Date",
  valueRange = as.Date(c("2020-01-01", "2020-12-31")))

# Range validation examples
validateVectorRange(x = c(5, 10), type = "numeric", valueRange = c(1, 10))
validateVectorRange(x = c("a", "b"), type = "character", valueRange = c("a", "c"))
validateVectorRange(x = as.Date(c("2020-01-01")), type = "Date",
  valueRange = as.Date(c("2020-01-01", "2020-12-31")))
validateVectorRange(x = 1:3, type = "integer", valueRange = c(1L, 5L))

# Allowed values validation examples
validateVectorValues(x = c("a", "b"), type = "character", allowedValues = c("a", "b", "c"))
validateVectorValues(x = c(2L, 4L), type = "integer", allowedValues = c(1L, 2L, 3L, 4L))
validateVectorValues(x = c(TRUE), type = "logical", allowedValues = c(TRUE, FALSE))

}
