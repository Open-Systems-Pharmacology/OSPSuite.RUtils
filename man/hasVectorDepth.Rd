% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validation-vector-depth.R
\name{hasVectorDepth}
\alias{hasVectorDepth}
\alias{validateVectorDepth}
\title{Validate if the vector depth is as expected}
\usage{
hasVectorDepth(x, expectedDepth = 2L)

validateVectorDepth(x, expectedDepth = 2L)
}
\arguments{
\item{x}{A vector whose depth needs to be checked.}

\item{expectedDepth}{An integer representing desired vector depth.}
}
\value{
\code{hasVectorDepth()} returns a logical from comparison of actual versus
expected depth.

\code{validateVectorDepth()} produces error if the validation is unsuccessful;
otherwise, it returns \code{NULL}.
}
\description{
Function parameters that accept a vector argument, the vector with depth
greater than 2, which corresponds to a nested list, is rarely desirable.

The \code{hasVectorDepth()} checks if the vector is of desirable depth, while
\code{validateVectorDepth()} validates the same.
}
\details{
Vector depths can be understood as follows:
\itemize{
\item \code{1} = atomic vector (or empty list)
\item \code{2} = non-nested list
\item \verb{> 2} = nested list
}
}
\examples{

hasVectorDepth(c(1), 1L) # TRUE
hasVectorDepth(list(), 1L) # TRUE
hasVectorDepth(list(1), 1L) # FALSE

validateVectorDepth(c(1), 1L) # NULL
validateVectorDepth(list(), 1L) # NULL
validateVectorDepth(list(1), 2L) # NULL

# this will produce an error
# validateVectorDepth(list(list(1))) # depth is 3

}
