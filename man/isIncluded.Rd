% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validation-inclusion.R
\name{isIncluded}
\alias{isIncluded}
\alias{validateIsIncluded}
\title{Check if a vector of values is included in another vector of values}
\usage{
isIncluded(values, parentValues)

validateIsIncluded(values, parentValues, nullAllowed = FALSE)
}
\arguments{
\item{values}{A vector of values.}

\item{parentValues}{A vector of values where \code{values} are checked for
inclusion.}
}
\value{
\itemize{
\item \code{isIncluded()} returns \code{TRUE} if the value or \strong{all} \code{values} (if it's a
vector) are present in the \code{parentValues}; \code{FALSE} otherwise.
\item \code{validateIsIncluded()} returns \code{NULL} if child value is included in parent
value set, otherwise error is signaled.
}
}
\description{
Check if a vector of values is included in another vector of values
}
\examples{
# check if a column is present in dataframe
A <- data.frame(
  col1 = c(1, 2, 3),
  col2 = c(4, 5, 6),
  col3 = c(7, 8, 9)
)
isIncluded("col3", names(A)) # TRUE

# check if single element is present in a vector (atomic or non-atomic)
isIncluded("x", list("w", "x", 1, 2)) # TRUE
isIncluded("x", c("w", "a", "y")) # FALSE

# check if **all** values (if it's a vector) are contained in parent values
isIncluded(c("x", "y"), c("a", "y", "b", "x")) # TRUE
isIncluded(list("x", 1), list("a", "b", "x", 1)) # TRUE
isIncluded(c("x", "y"), c("a", "b", "x")) # FALSE
isIncluded(list("x", 1), list("a", "b", "x")) # FALSE

# corresponding validation
validateIsIncluded("col3", names(A)) # NULL
# validateIsIncluded("col6", names(A)) # error
}
