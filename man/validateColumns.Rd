% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validation-options.R
\name{validateColumns}
\alias{validateColumns}
\title{Validate Data Frame Columns Against Specified Validations}
\usage{
validateColumns(object, columnSpecs)
}
\arguments{
\item{object}{#' @param object A data frame, tibble, or data.table whose columns
are to be validated.}

\item{columnSpecs}{A list specifying the valid configurations for each column in \code{object}.
Each entry in \code{columnSpecs} should be a list containing the \code{type}, \code{allowedValues},
\code{valueRange}, \code{nullAllowed}, and \code{naAllowed} parameters for the column it corresponds to.}
}
\value{
The function does not explicitly return a value. It completes without error if all columns
are valid according to \code{columnSpecs}. If any validation fails, it generates a descriptive
error message, reporting all failures if multiple validations fail.
}
\description{
This function checks if the columns of a given data frame adhere to specified
validations defined in \code{columnSpecs}. It validates each column's type, value range,
allowed values, and handles \code{NULL} and \code{NA} values based on the configurations
provided in \code{columnSpecs}.
}
\details{
The function iterates through each column name in \code{columnSpecs}, retrieves the corresponding
column from \code{object}, and validates it using \code{validateVector}. The validation includes:
\itemize{
\item Type correctness according to \code{type}.
\item Whether the column values are within the specified \code{valueRange} (if applicable).
\item Whether the column values are among the \code{allowedValues} (if specified).
\item Handling of \code{NULL} and \code{NA} based on \code{nullAllowed} and \code{naAllowed} flags.
}
}
\examples{
df <- data.frame(
  age = c(25L, 30L, NA),
  BMI = c(22.5, 27.3, 24.9),
  gender = c("M", "F", "F"),
  smoker = c(TRUE, FALSE, NA)
)

columnSpecs <- list(
  age = list(type = "integer", valueRange = c(18L, 65L), naAllowed = TRUE),
  BMI = list(type = "numeric", valueRange = c(15.0, 40.0), naAllowed = TRUE),
  gender = list(type = "character", allowedValues = c("M", "F"), naAllowed = TRUE),
  smoker = list(type = "logical", naAllowed = TRUE)
)

validateColumns(df, columnSpecs)

}
