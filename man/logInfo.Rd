% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities-logger.R
\name{logInfo}
\alias{logInfo}
\title{logInfo}
\usage{
logInfo(msg, type = "info")
}
\arguments{
\item{msg}{Character values of message to log that leverages \code{cli} formatting.}

\item{type}{Name of the message type to toward best \code{cli} display:
\itemize{
\item \code{"info"}: uses \code{cli::cli_alert_info()}
\item \code{"success"}: uses \code{cli::cli_alert_success()}
\item \code{"h1"}: uses \code{cli::cli_h1()}
\item \code{"h2"}: uses \code{cli::cli_h2()}
\item \code{"h3"}: uses \code{cli::cli_h3()}
\item \code{"text"}: uses \code{cli::cli_text()}
\item \code{"alert"}: uses \code{cli::cli_alert()}
\item \code{"li"}: uses \code{cli::cli_li()}
\item \code{"ol"}: uses \code{cli::cli_ol()}
\item \code{"progress_step"}: uses \code{cli::cli_progress_step()}
}}
}
\description{
Log information with time stamp accounting for message type.
Message type will point toward the most appropriate \code{cli} function display.
}
\examples{
# Log information
logInfo(cliFormat("This is an {.strong info} message"))

# Log a title
logInfo(cliFormat("Task: {.strong tic toc test}"), type = "h1")

# Log success
t0 <- tic()
Sys.sleep(3)
logInfo(cliFormat("Task: {.strong tic toc test} completed [{toc(t0, \"s\")}]"), type = "success")

}
\keyword{logging}
