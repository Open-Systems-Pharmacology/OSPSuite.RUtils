% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validation-options.R
\name{validateIsOption}
\alias{validateIsOption}
\title{Validate Options Against Specified Valid Options}
\usage{
validateIsOption(options, validOptions)
}
\arguments{
\item{options}{A list of options to validate.}

\item{validOptions}{A list specifying the valid configurations for each option in \code{options}.
Each entry in \code{validOptions} should be a list containing the \code{type}, \code{allowedValues},
\code{valueRange}, \code{nullAllowed}, and \code{naAllowed} parameters for the option it corresponds to.}
}
\value{
Does not return a value explicitly. Completes without error if all options are
valid according to \code{validOptions}. If any validation fails, it stops and generates
a descriptive error message, reporting all failures if multiple validations fail.
}
\description{
This function checks if the given options adhere to specified valid options.
It validates each option's type, value range, allowed values, and handles \code{NULL} and
\code{NA} values according to the configuration provided in \code{validOptions}. It
automatically converts numeric options to integers when possible and specified
so by \code{validOptions} for validation and issues a warning.
}
\details{
The function iterates through each option in \code{validOptions}, retrieves the corresponding
value from \code{options}, and validates it using \code{validateVector}.
The validation covers:
\itemize{
\item Type correctness according to \code{type}, with automatic conversion for numeric to
integer where appropriate.
\item Whether the value is within the specified \code{valueRange} (if applicable).
\item Whether the value is among the \code{allowedValues} (if specified).
\item Handling of \code{NULL} and \code{NA} based on \code{nullAllowed} and \code{naAllowed} flags.
}
}
\examples{
options <- list(
  optimizationMethod = "genetic_algorithm",
  includeInteractions = TRUE,
  maxIterations = 1000L,
  convergenceThreshold = 0.02
)

validOptions <- list(
  optimizationMethod = list(
    type = "character", allowedValues = c("gradient_descent", "genetic_algorithm")
  ),
  includeInteractions = list(type = "logical"),
  maxIterations = list(type = "integer", valueRange = c(1L, 10000L)),
  convergenceThreshold = list(type = "numeric", valueRange = c(0, 1))
)

validateIsOption(options, validOptions)

}
